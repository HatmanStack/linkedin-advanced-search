AWSTemplateFormatVersion: '2010-09-09'
Description: 'Complete MWAA Environment for LinkedIn Profile Processing'

Parameters:
  MWAAEnvironmentName:
    Type: String
    Default: linkedin-profile-processor
    Description: Name of the MWAA environment
  
  MWAABucketName:
    Type: String
    Description: Name of the S3 bucket containing DAGs and requirements
  
  MWAAExecutionRoleArn:
    Type: String
    Description: ARN of the MWAA execution role

Resources:
  # VPC for MWAA
  MWAAVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.192.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-vpc"

  # Public subnets for NAT Gateway
  MWAAPublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MWAAVPC
      CidrBlock: 10.192.10.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-public-subnet-1"

  MWAAPublicSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MWAAVPC
      CidrBlock: 10.192.11.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-public-subnet-2"

  # Private subnets for MWAA
  MWAAPrivateSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MWAAVPC
      CidrBlock: 10.192.20.0/24
      AvailabilityZone: !Select [0, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-private-subnet-1"

  MWAAPrivateSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MWAAVPC
      CidrBlock: 10.192.21.0/24
      AvailabilityZone: !Select [1, !GetAZs ""]
      MapPublicIpOnLaunch: false
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-private-subnet-2"

  # Internet Gateway
  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-igw"

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MWAAVPC
      InternetGatewayId: !Ref InternetGateway

  # NAT Gateway
  NatGatewayEIP:
    Type: AWS::EC2::EIP
    DependsOn: InternetGatewayAttachment
    Properties:
      Domain: vpc

  NatGateway:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NatGatewayEIP.AllocationId
      SubnetId: !Ref MWAAPublicSubnet1
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-nat"

  # Route tables
  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MWAAVPC
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-public-rt"

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MWAAPublicSubnet1
      RouteTableId: !Ref PublicRouteTable

  PublicSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MWAAPublicSubnet2
      RouteTableId: !Ref PublicRouteTable

  PrivateRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MWAAVPC
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-private-rt"

  DefaultPrivateRoute:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref PrivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGateway

  PrivateSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MWAAPrivateSubnet1
      RouteTableId: !Ref PrivateRouteTable

  PrivateSubnet2RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref MWAAPrivateSubnet2
      RouteTableId: !Ref PrivateRouteTable

  # Security Group for MWAA
  MWAASecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for MWAA environment
      VpcId: !Ref MWAAVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
          Description: HTTPS access
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
          Description: All outbound traffic
      Tags:
        - Key: Name
          Value: !Sub "${MWAAEnvironmentName}-sg"

  # Security Group Ingress Rule for self-referencing
  MWAASecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId: !Ref MWAASecurityGroup
      IpProtocol: tcp
      FromPort: 5432
      ToPort: 5432
      SourceSecurityGroupId: !Ref MWAASecurityGroup
      Description: PostgreSQL access within security group

  # MWAA Environment
  MWAAEnvironment:
    Type: AWS::MWAA::Environment
    Properties:
      Name: !Ref MWAAEnvironmentName
      SourceBucketArn: !Sub "arn:aws:s3:::${MWAABucketName}"
      DagS3Path: dags
      RequirementsS3Path: requirements.txt
      ExecutionRoleArn: !Ref MWAAExecutionRoleArn
      NetworkConfiguration:
        SecurityGroupIds:
          - !GetAtt MWAASecurityGroup.GroupId
        SubnetIds:
          - !Ref MWAAPrivateSubnet1
          - !Ref MWAAPrivateSubnet2
      WebserverAccessMode: PUBLIC_ONLY
      MaxWorkers: 2
      MinWorkers: 1
      EnvironmentClass: mw1.small
      AirflowVersion: '2.5.1'
      LoggingConfiguration:
        DagProcessingLogs:
          Enabled: true
          LogLevel: INFO
        SchedulerLogs:
          Enabled: true
          LogLevel: INFO
        TaskLogs:
          Enabled: true
          LogLevel: INFO
        WebserverLogs:
          Enabled: true
          LogLevel: INFO
        WorkerLogs:
          Enabled: true
          LogLevel: INFO

Outputs:
  MWAAEnvironmentName:
    Description: "Name of the MWAA environment"
    Value: !Ref MWAAEnvironmentName
  
  MWAAWebserverUrl:
    Description: "URL of the MWAA webserver"
    Value: !GetAtt MWAAEnvironment.WebserverUrl
